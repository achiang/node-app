#!/bin/bash

set -eu # -x for verbose logging to juju debug-log

umask 002

install_root=`config-get install_root`
app_name=`config-get app_name`
app_dir="$install_root/$app_name"
app_user=`config-get app_user`
app_scm=`config-get app_scm`
app_url=`config-get app_url`
app_branch=`config-get app_branch`
app_port=`config-get app_port`

install_node() {
  juju-log "Installing node..."
  apt-get -y install -qq nodejs nodejs-dev build-essential
}
[[ -x /usr/bin/node ]] || install_node

install_npm() {
  juju-log "Installing npm..."
  apt-get -y install -qq git-core
  git clone https://github.com/isaacs/npm /tmp/npm -b 0.2
  cd /tmp/npm && node cli.js install
}
[[ -x /usr/bin/npm ]] || install_npm

install_app() {
  juju-log "Installing ${app_name}..."
  git clone ${app_url} ${app_dir} -b ${app_branch}
  chown -Rf ${app_user}.${app_user} ${app_dir}

  if [ -f ${app_dir}/package.json ]; then
    cd ${app_dir} && npm install
  fi

  cat > /etc/init/${app_name}.conf <<EOS
description "${app_name} node.js server"
 
start on (net-device-up
          and local-filesystems
          and runlevel [2345])
stop on runlevel [!2345]
 
expect fork
respawn
 
script
  export HOME=/
  export NODE_PATH=/usr/lib/node
  #exec sudo -u ${app_user} /usr/bin/node ${app_dir}/server.js >> /var/log/${app_name}.log 2>&1 &
  exec /usr/bin/node ${app_dir}/server.js >> /var/log/${app_name}.log 2>&1 &
end script
EOS
}
[[ -d ${app_dir} ]] || install_app

configure_app() {
  juju-log "Configuring ${app_name}..."

  config_file_path=${app_dir}/config/config.js
  if [ -f $config_file_path ]; then
    sed -i "s/name.*/name\" : \"${app_name}\"/" $config_file_path
    sed -i "s/listen_port.*/listen_port\" : \"${app_port}\"/" $config_file_path
  fi

#  #cd ${app_dir}
#  #sudo -u ${app_user} 'wget http://geolite.maxmind.com/download/geoip/database/GeoLiteCity.dat.gz | gzip -d > GeoLiteCity.dat'

}
configure_app

juju-log "Delaying app startup until mongodb joins" 
#juju-log "starting app"
#service ${app_name} restart || service ${app_name} start

